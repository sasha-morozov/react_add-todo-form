{"version":3,"sources":["TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoList","state","title","name","isTitle","isName","handleChange","event","target","value","setState","clearState","handleSubmit","preventDefault","props","users","todos","console","log","maxID","Math","max","apply","map","item","id","relevantUser","find","user","relevantUserID","todo","userId","completed","addTodo","this","classNameForTitle","classNameForName","onSubmit","className","type","placeholder","onChange","disabled","React","Component","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todosWithUser","App","todoList","userList","currState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfadf1ec.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import classNames from 'classnames';\n\ninterface Props {\n  todos: Todo[];\n  addTodo: (todo: Todo) => void;\n  users: User[];\n}\n\ninterface State {\n  title: string;\n  name: string;\n  isTitle: boolean;\n  isName: boolean;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    name: '',\n    isTitle: false,\n    isName: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      this.setState({\n        [name]: value,\n        isTitle: true,\n      });\n    }\n\n    if (name === 'name') {\n      this.setState({\n        [name]: value,\n        isName: true,\n      });\n    }\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      name: '',\n      isTitle: false,\n      isName: false,\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const { users, todos } = this.props;\n    const {\n      name, title,\n    } = this.state;\n\n    if (title !== '') {\n      console.log('123');\n      this.setState({ isTitle: true });\n    }\n\n    if (name !== '') {\n      this.setState({ isName: true });\n    }\n\n    const maxID = Math.max.apply(null, todos.map(item => item.id));\n    const relevantUser = users.find(user => user.name === name) || null;\n    const relevantUserID = relevantUser ? relevantUser.id : null;\n\n    if (!title || !name) {\n      return;\n    }\n\n    const todo = {\n      title,\n      id: maxID,\n      userId: relevantUserID,\n      completed: false,\n      user: relevantUser,\n    };\n\n    this.props.addTodo(todo);\n    this.clearState();\n  };\n\n  render() {\n    const { todos, users } = this.props;\n    const {\n      title, name, isName, isTitle,\n    } = this.state;\n\n    const classNameForTitle = isTitle ? 'd-none' : 'd-block';\n    const classNameForName = isName ? 'd-none' : 'd-block';\n\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n        >\n\n          <input\n            type=\"text\"\n            id=\"textInput\"\n            name=\"title\"\n            placeholder=\"Add a todo\"\n            value={title}\n            onChange={this.handleChange}\n            className=\"w-50 mb-2 py-2 border rounded\"\n          />\n          {isTitle && (\n            <p className={classNameForTitle}>*Please enter the title</p>\n          )}\n\n          <select\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            className=\"w-50 mb-2 py-2 border rounded\"\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {users.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isName && (\n            <p className={classNameForName}>*Choose a user</p>\n          )}\n\n          <button\n            type=\"submit\"\n            className=\"w-25 mb-3 py-2 border rounded bg-primary text-light\"\n          >\n            Add a todo\n          </button>\n        </form>\n\n        <ul className=\"mx-auto row align-items-center\">\n          {todos.map(todo => (\n            <li\n              key={todo.id}\n              className=\"border rounded py-2 mb-2 row align-items-center\"\n            >\n              <span className=\"col-md-4\">\n                {todo.user\n                  ? (\n                    `${todo.user.name}`\n                  )\n                  : ('Unknown User')}\n              </span>\n              {' '}\n              <span className=\"col-md-4\">\n                {todo.title}\n              </span>\n              {' '}\n              <span className=\"col-md-4\">\n                {!todo.completed\n                  ? ('Still in progress')\n                  : ('Completed')}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './TodoList';\n\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst todosWithUser: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\ninterface State {\n  todoList: Todo[];\n  userList : User[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todoList: [...todosWithUser],\n    userList: users,\n  };\n\n  addTodo = (todo: Todo) => {\n    this.setState((currState: State) => {\n      return {\n        todoList: [...currState.todoList, todo],\n      };\n    });\n  };\n\n  render() {\n    const { userList, todoList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        Todos:\n        <TodoList\n          todos={todoList}\n          addTodo={this.addTodo}\n          users={userList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}